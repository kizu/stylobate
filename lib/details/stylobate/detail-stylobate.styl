$stylobate_extends = {}
$stylobate_extends_without_defaults = {}

stylobate_extends($what, $target, $defaults = true)
  $stylobate_extends[''+utilus_ident($what)] = $target

  if !$defaults
    $stylobate_extends_without_defaults[''+utilus_ident($what)] = true

// Far from ideal (can't redefine defaults for already redefined defaults)
// Dunno if it is possible to make proper refedining in Stylus' stylobate
stylobate_new_defaults($this, $defaults...)
  _stylobate_defaults($this, $defaults)

stylobate_defaults($this, $defaults...)
  if !($this.is_extended and $this.called_from in $stylobate_extends_without_defaults)
    _stylobate_defaults($this, $defaults)

_stylobate_defaults($this, $defaults)
  $origin = $this.called_from
  return false if not $origin
  $new = clone($defaults)
  prepend($new, $origin + '_')
  for $param, $index in $new
    $found_param = utilus_get($this['arguments'], $param[0])
    if $found_param or (type($found_param) == 'string' and $found_param == '')
      $new[$index] = ''
  for $param, $index in $this.arguments
    $testparam = $param
    $testparam = '' unless type($param) in ('ident' 'string')
    unless match('^[-_]', $testparam)
      push($new, $param)
  _stylobate('', $new)

_stylobate($name, $params)
  $this = {
    parent: {},
    arguments: clone($params),
    called_from: $name + $params[0]
  }
  // Remove the item's name from the arguments
  $this['arguments'][0] = unquote('')

  // Check if the called stylobate extends anything, if so, call it first,
  // and use the extended stylobate for subitems.
  $skin_name = utilus_ident($params[0])
  $extended_name_ending = replace('.*[^-_]+', '', $skin_name)
  $extended_name = $stylobate_extends[$name + $skin_name] || $stylobate_extends[$name + replace('[_-]+$', '', $skin_name)]
  $extended_name = utilus_ident($extended_name) + $extended_name_ending if $extended_name
  if $extended_name
    $this['is_extended'] = true
    $skin_name = replace('^' + $name, '', $extended_name)

    if !utilus_is_function($extended_name) and $extended_name_ending == ''
      error('No stylobate function “' + $extended_name + '”')

  // Why do we need context in the first place
  $context = utilus_get($params, 'context', '')

  {$extended_name}($this) if $extended_name and !$context and $extended_name_ending == ''
  {$context}
    {$extended_name}($this) if $extended_name and $context and $extended_name_ending == ''

  if ($name + join('',$params) != '') and !utilus_is_function($name + utilus_ident($params[0])) and !$extended_name and !match('[_-]$', utilus_ident($params[0]))
    error('No such “' + $name + '” — “' + utilus_ident($params[0]) + '”')

  {$name + utilus_ident($params[0])}($this) if !$context and utilus_is_function($name + utilus_ident($params[0]))
  {$context}
    {$name + utilus_ident($params[0])}($this) if $context and utilus_is_function($name + utilus_ident($params[0]))

  for $subitem in $this.arguments
    // There shouldn't be an `if` inside a {$selector}, 'cause
    // there is a crazy stylus bug. When it would be fixed,
    // revert this version to 669082fb35
    $selector = ''
    $foundsubitem = ''
    if is_array($subitem)
      if type($subitem[0]) in ('ident' 'string')
        if match('^(\-|_)', $subitem[0])
          $foundsubitem = $subitem
          if type($subitem[1]) == 'string'
            if match('&', $subitem[1])
              $selector = $subitem[1]
            else
              $foundsubitem = ''
    else
      if type($subitem) in ('ident' 'string')
        if match('^(\-|_)', $subitem)
          $foundsubitem = $subitem

    call_subitem()
      $this-subitem = {
        parent: $this,
        arguments: clone($foundsubitem)
      }
      $this-subitem['arguments'][0] = unquote('')

      $subitemname = $name + replace('[_-]+$', '', $skin_name) + $foundsubitem[0]
      $subitemname = replace('[_-]+$', '', $extended_name) + $foundsubitem[0] if $extended_name
      $subitemname = '' unless utilus_is_function($subitemname)

      // If there is extended subitem function, use it, otherwise
      $subitemname_extended = ''
      $subitemname_extended = $name + replace('[_-]+$', '', utilus_ident($params[0])) + $foundsubitem[0] if $extended_name
      $subitemname_extended = '' unless utilus_is_function($subitemname_extended)


      // Push proper `called_from`
      $this-subitem['called_from'] = $subitemname unless $subitemname_extended or !$subitemname
      $this-subitem['called_from'] = $subitemname_extended if $subitemname_extended

      {$subitemname}($this-subitem) unless $context or $subitemname_extended or !$subitemname
      {$subitemname_extended}($this-subitem) unless $context or !$subitemname_extended
      {$context}
        {$subitemname}($this-subitem) if $context and !$subitemname_extended and $subitemname
        {$subitemname_extended}($this-subitem) if $context and $subitemname_extended

    {$selector}
      call_subitem() if $foundsubitem != '' and $selector != ''

    if $selector == '' and $foundsubitem != ''
      call_subitem()

stylobate($name, $params)
  if utilus_is_comma_list($params)
    for $item in $params
      _stylobate($name, $item)
  else
    _stylobate($name, $params)
